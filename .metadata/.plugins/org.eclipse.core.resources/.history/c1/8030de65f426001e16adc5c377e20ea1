
public class AccountTest {
	public static void main(String[] args) {
		
		//C++ Book book1;				EAGER LOADING - 
		//C++ Book *book2= new Book();  LAZY LOADING
		
		
		Book bookObj1 = new Book();  //bookObj is nothing but smart pointers of C++
		bookObj1.setBook(101, "JPL", "James Gosling", 890, 1200, 1);
		
		Book bookObj2 = new Book();  //bookObj is nothing but smart pointers of C+	
		bookObj2.setBook(102, "Unix", "Richard Stallman", 890, 1200, 4);
		
		
		Book bookObj3 = new Book();  //bookObj is nothing but smart pointers of C++
		bookObj3.setBook(103, "C++ Primer Plus", "Stanley Lippman", 1290, 1500, 3);
		

		bookObj2.author=bookObj1.author;
		bookObj1.bookName=bookObj2.bookName;
		bookObj3.author = bookObj2.author;
		
		
		bookObj1.printBook();
		bookObj2.printBook();
		bookObj3.printBook();
		
		
	}
	
}


class Book
{
	int bookNumber; //data member | field [java]
	String bookName ;
	String author;
	float price;
	int numberOfPages;
	int edition;
	
	//mutator function|member function | method [java]
	public void setBook(int bookNumber, String bookName, String author, float price, int numberOfPages, int edition) {
		this.bookNumber = bookNumber;
		this.bookName = bookName;
		this.author = author;
		this.price = price;
		this.numberOfPages = numberOfPages;
		this.edition = edition;
	}

	public void printBook()  { //accessor
		System.out.println("Number  : "+bookNumber);
		System.out.println("Name    : "+bookName);
		System.out.println("Author  : "+author);
		System.out.println("Price   : "+price);
		System.out.println("NOP     : "+numberOfPages);
		System.out.println("Edition : "+edition+"\n");
	}
}

//struct Book (C) <-- only fields
//struct Book (C++) <-- fields+ method BUT public
//struct Book (C++) <-- private field + public methods 

//class  Book (C++) <-- default as private  | public:









